
import datetime
import pandas as pd
import numpy as np
import statsmodels.api as sm
import scipy.optimize as spop
import matplotlib.pyplot as plt
import yfinance as yf
from datetime import datetime as daee
from itertools import combinations
import json
import requests

import statsmodels.api as sm
def get_histweek(ticker,period,interval,week):
    
    today = datetime.datetime.today()
    last_week_start = today - datetime.timedelta(days=today.weekday(), weeks=week)
    
    last_week_start=last_week_start.replace(hour=9,minute=29)
    last_week_end = last_week_start + datetime.timedelta(days=365)
    price_history=yf.Ticker(ticker).history(start=last_week_start,end=last_week_end,interval=interval)["Close"]
   
    return(price_history.dropna())

class CointegrationA:
    
    def datasetprovider(stock1,stock2,week,period,backtrack):
        stocks=[stock1,stock2]
        data=pd.DataFrame()
        returns=pd.DataFrame()
        for stock in stocks:
            prices=get_histweek(stock,week,period,backtrack)
        
            data[stock]=prices
            returns[stock]=np.append(data[stock][1:].reset_index(drop=True)/data[stock][:-1].reset_index(drop=True)-1,0)
        return(returns,data)

    def cointegrationCacl(stock1,stock2,data,returns,fee,t_threshold,window):
        gross_returns=np.array([])
        net_returns=np.array([])
        t_s=np.array([])
        
        x=0
        tradelog={}
        for t in range(window,len(data)):
            x+=1

            
            def unit_root(b):
                a=np.average(data[stock2][t-window:t]-b*data[stock1][t-window:t])
                fair_value=a+b*data[stock1][t-window:t]
                diff=np.array(fair_value-data[stock2][t-window:t])
                diff_diff=diff[1:]-diff[:-1]
                
                reg=sm.OLS(diff_diff, diff[:-1])
                res=reg.fit()
                
                return (res.params[0]/res.bse[0])
            res1=spop.minimize(unit_root,data[stock2][t]/data[stock1][t],method='Nelder-Mead')
            t_opt=res1.fun
            b_opt=float(res1.x)
            a_opt=np.average(data[stock2][t-window:t]-b_opt*data[stock1][t-window:t])
            fair_value=a_opt+b_opt*data[stock1][t]

            if t==window:
                old_signal=0
            if t_opt > t_threshold:
                signal=0
                gross_return=0
            else:
                signal=np.sign(fair_value-data[stock2][t])
                gross_return=signal*returns[stock2][t]-signal*returns[stock1][t]
            fees=fee*abs(signal-old_signal)
            net_return=gross_return-fees
            gross_returns=np.append(gross_returns,gross_return)
            net_returns=np.append(net_returns,net_return)
            t_s=np.append(t_s,t_opt)

            
          
            
            tradeloglist=["no trading","long position on "+ stock2+" and short position on "+stock1,"long position on "+ stock1 +" and short position on "+stock2]
            if signal==0:
                listindex=0
            elif signal==1:
                listindex=1
            else:
                listindex=2
            tradingpair=str(data.index[t])
            
            
            tradelog[tradingpair]=[tradeloglist[listindex],"gross period return "+str(round(gross_return*100,2))+" %","net period return "+str(round(net_return*100,2))+" %"]
            old_signal=signal
        return(str(round(np.prod(1+net_returns)*100-100,2))+"%",tradelog,t_s)

stockchoice=['DHI','PHM']
stocklist=[['AAL', 'UAL', 0.9194718657409513],
 ['AAP', 'AOS', 0.6698160224703303],
 ['AAPL', 'ADP', 0.888698209065803],
 ['ABBV', 'AZO', 0.645166813335947],
 ['ABC', 'HWM', 0.8185427371941495],
 ['ABMD', 'DG', 0.02579274345174116],
 ['ABT', 'MCO', 0.8192276614714838],
 ['ACGL', 'AMP', 0.7577303750287865],
 ['ACN', 'NDAQ', 0.8545355429386536],
 ['ADBE', 'TYL', 0.8778565604474539],
 ['ADI', 'MCHP', 0.8568873819032287],
 ['ADM', 'TSCO', 0.7504210363170907],
 ['ADP', 'PAYX', 0.9046827134807677],
 ['ADSK', 'ANSS', 0.8649956044970621],
 ['AEE', 'WEC', 0.9183938183231947],
 ['AEP', 'NI', 0.7306188003344284],
 ['AES', 'NEE', 0.7255748230258209],
 ['AFL', 'AJG', 0.8552551863658999],
 ['AIG', 'CL', 0.7046310644422944],
 ['AIZ', 'CB', 0.8174557160605691],
 ['AJG', 'AFL', 0.8552551863658999],
 ['AKAM', 'TROW', 0.848469192642516],
 ['ALB', 'PLD', 0.7249412236262605],
 ['ALGN', 'NVDA', 0.7202452099374138],
 ['ALK', 'UAL', 0.9342593241165407],
 ['ALL', 'NTRS', 0.8415811985916607],
 ['ALLE', 'GRMN', 0.7645737593375236],
 ['AMAT', 'LRCX', 0.9331094806094339],
 ['AMCR', 'VMC', 0.7873011607641316],
 ['AMD', 'CDAY', 0.7869245392176323],
 ['AME', 'IEX', 0.8791014530595687],
 ['AMGN', 'GILD', 0.8537965026253141],
 ['AMP', 'AON', 0.8205756186658946],
 ['AMT', 'PLD', 0.8632484030985241],
 ['AMZN', 'GOOG', 0.8345258796227548],
 ['ANET', 'INTU', 0.8130714443027447],
 ['ANSS', 'NOW', 0.8761933532228416],
 ['AON', 'MMC', 0.8965119202706551],
 ['AOS', 'BK', 0.7867890478149956],
 ['APA', 'BKR', 0.7967219531521712],
 ['APD', 'JKHY', 0.8506698905310612],
 ['APH', 'KMB', 0.8791330246669923],
 ['APTV', 'GM', 0.9423021336580382],
 ['ARE', 'WRK', 0.8718987290347504],
 ['ATO', 'WEC', 0.868745658714528],
 ['ATVI', 'SBUX', 0.8823428698553096],
 ['AVB', 'UDR', 0.8477519035096605],
 ['AVGO', 'QRVO', 0.8964080143824027],
 ['AVY', 'DD', 0.858498984448503],
 ['AWK', 'HPQ', 0.909773800127259],
 ['AXP', 'PPG', 0.8755715089303139],
 ['AZO', 'KDP', 0.8159061017419371],
 ['BA', 'HIG', 0.6769570815689862],
 ['BAC', 'NTRS', 0.8502702104995035],
 ['BALL', 'MAS', 0.8762168996496493],
 ['BAX', 'CAG', 0.5361834588535734],
 ['BBWI', 'ULTA', 0.7228756475521394],
 ['BBY', 'MS', 0.8835144829449668],
 ['BDX', 'BK', 0.7465018413843141],
 ['BEN', 'IVZ', 0.9353672926688444],
 ['A', 'AAL', 0.0],
 ['BIIB', 'BIO', 0.5921142552366436],
 ['BIO', 'RMD', 0.7318100569380245],
 ['BK', 'AOS', 0.7867890478149956],
 ['BKNG', 'MAR', 0.7408771616910701],
 ['BKR', 'HAL', 0.8824327387099589],
 ['BLK', 'ZBRA', 0.8703122427592176],
 ['BMY', 'MRK', 0.6905880253028405],
 ['BR', 'JKHY', 0.896747399822957],
 ['A', 'AAL', 0.0],
 ['BRO', 'MS', 0.8672536906369508],
 ['BSX', 'HPE', 0.7332749875246943],
 ['BWA', 'GM', 0.9116108298232635],
 ['BXP', 'CSGP', 0.8362976096069913],
 ['C', 'MS', 0.9415699554468102],
 ['CAG', 'HIG', 0.7711200791024225],
 ['CAH', 'HPE', 0.8084560496687461],
 ['CARR', 'MMM', 0.71871227646882],
 ['CAT', 'QCOM', 0.8592043180651245],
 ['CB', 'SBUX', 0.8935355311396185],
 ['CBOE', 'IT', 0.7861542760377634],
 ['CBRE', 'TROW', 0.9081728783960721],
 ['CCI', 'SBAC', 0.8289631859712572],
 ['CCL', 'NCLH', 0.9309222983240326],
 ['CDAY', 'AMD', 0.7869245392176323],
 ['CDNS', 'INTU', 0.8566324802462262],
 ['CDW', 'MCHP', 0.9228420024124989],
 ['CE', 'IDXX', 0.8605272454687383],
 ['CEG', 'NSC', 0.7448603815000656],
 ['CF', 'MOS', 0.8403500492473001],
 ['CFG', 'FITB', 0.8608419426838646],
 ['CHD', 'CL', 0.9236411949065496],
 ['CHRW', 'ITW', 0.6628423102703181],
 ['CHTR', 'DIS', 0.7622109308204815],
 ['CI', 'NOC', 0.641561279822417],
 ['CINF', 'GM', 0.8830569080118293],
 ['CL', 'CHD', 0.9236411949065496],
 ['CLX', 'CHD', 0.8930909792744528],
 ['CMA', 'MS', 0.8652124985240262],
 ['CMCSA', 'FOXA', 0.8638301250223214],
 ['CME', 'PG', 0.7281086305369755],
 ['CMG', 'EXC', 0.8194288911732301],
 ['CMI', 'PPG', 0.8692620863190146],
 ['CMS', 'LNT', 0.7493320645172459],
 ['CNC', 'MOH', 0.8206964512290815],
 ['CNP', 'ED', 0.9156771530563299],
 ['COF', 'DFS', 0.8897183579267224],
 ['COO', 'EW', 0.6550850576927615],
 ['COP', 'MRO', 0.8349745224890902],
 ['COST', 'VRTX', 0.7298551692205865],
 ['CPB', 'GIS', 0.7727671361597678],
 ['CPRT', 'PEP', 0.8276623310787083],
 ['CPT', 'UDR', 0.8429762895652123],
 ['CRL', 'TECH', 0.724025292658711],
 ['CRM', 'EXPD', 0.700401608377486],
 ['CSCO', 'MNST', 0.8071052907775892],
 ['CSGP', 'PPG', 0.8557964646737194],
 ['CSX', 'UNP', 0.8560616451244747],
 ['CTAS', 'HON', 0.8389182992541069],
 ['CTLT', 'MKC', 0.6551286429390546],
 ['CTRA', 'AAPL', 0.8082497785923808],
 ['CTSH', 'BR', 0.8705212267059779],
 ['CTVA', 'C', 0.9005432232599636],
 ['CVS', 'GL', 0.7122328300726052],
 ['CVX', 'XOM', 0.9357101725871453],
 ['CZR', 'LNC', 0.904460933487107],
 ['D', 'FDS', 0.7895023275502058],
 ['DAL', 'UAL', 0.9235203338101704],
 ['DD', 'HPQ', 0.881806308190165],
 ['DE', 'PCAR', 0.8310077302357131],
 ['DFS', 'COF', 0.8897183579267224],
 ['DG', 'PGR', 0.6977928175191114],
 ['DGX', 'K', 0.7914663560174015],
 ['DHI', 'PHM', 0.9568063376707742],
 ['DHR', 'TMO', 0.7790244201005445],
 ['DIS', 'ZBRA', 0.8971482986478767],
 ['DISH', 'GPN', 0.6565846424648517],
 ['DLR', 'DPZ', 0.8057019714444494],
 ['DLTR', 'FCX', 0.8757473578008116],
 ['DOV', 'AME', 0.836717201576223],
 ['DOW', 'AVY', 0.7882561559193351],
 ['DPZ', 'TSCO', 0.868967926535502],
 ['DRI', 'PH', 0.7797075666535582],
 ['DTE', 'ED', 0.8171841549360953],
 ['DUK', 'ED', 0.8659242648188561],
 ['DVA', 'EBAY', 0.8341236342256623],
 ['DVN', 'HAL', 0.9081728606624547],
 ['DXC', 'CDW', 0.8423990417684276],
 ['DXCM', 'DGX', 0.5247247168206525],
 ['EA', 'TSLA', 0.7341594004877945],
 ['EBAY', 'MHK', 0.8726255422550074],
 ['ECL', 'PPG', 0.8918143277271708],
 ['ED', 'CNP', 0.9156771530563299],
 ['EFX', 'AAPL', 0.8187184816963539],
 ['EIX', 'FE', 0.8465860037991383],
 ['EL', 'BIO', 0.7165708670888576],
 ['ELV', 'UNH', 0.8365337447346793],
 ['EMN', 'PHM', 0.9035843577118093],
 ['EMR', 'PKG', 0.8143994171241082],
 ['ENPH', 'SEDG', 0.6776367128556423],
 ['EOG', 'MRO', 0.8567247438547626],
 ['EPAM', 'ECL', 0.824789322678631],
 ['EQIX', 'MCO', 0.7478318639440186],
 ['EQR', 'UDR', 0.852753253905926],
 ['EQT', 'KDP', 0.7472513771803473],
 ['ES', 'AWK', 0.8568316370252844],
 ['ESS', 'MCO', 0.8664668635579543],
 ['ETN', 'ITW', 0.7933240888039057],
 ['ETR', 'AEE', 0.8939539601039702],
 ['ETSY', 'PHM', 0.8974240395180197],
 ['EVRG', 'MAS', 0.8277386141989664],
 ['EW', 'MDLZ', 0.7348739115104631],
 ['EXC', 'LNT', 0.821014749834191],
 ['EXPD', 'MOS', 0.7625429433387261],
 ['EXPE', 'PHM', 0.8386427519768458],
 ['EXR', 'PSA', 0.8322111913859616],
 ['F', 'GM', 0.9311313818113022],
 ['FANG', 'MRO', 0.9216570083005066],
 ['FAST', 'ECL', 0.8886732521483355],
 ['FCX', 'NUE', 0.9231959683419989],
 ['FDS', 'FAST', 0.8595446589878898],
 ['FDX', 'NKE', 0.744443172071507],
 ['FE', 'EIX', 0.8465860037991383],
 ['FFIV', 'ADBE', 0.8083086166316144],
 ['FIS', 'FISV', 0.8655352370386089],
 ['FISV', 'FIS', 0.8655352370386089],
 ['FITB', 'TFC', 0.8692567629199511],
 ['FLT', 'BR', 0.850933642120848],
 ['FMC', 'FISV', 0.7799750524036217],
 ['FOX', 'FOXA', 0.9956627622946393],
 ['FOXA', 'FOX', 0.9956627622946393],
 ['FRC', 'MCHP', 0.8911457629474622],
 ['FRT', 'REG', 0.9070742633900161],
 ['FSLR', 'NCLH', 0.8240308694328295],
 ['FTNT', 'TYL', 0.8389555087550866],
 ['FTV', 'IEX', 0.829128680962311],
 ['GD', 'HII', 0.5672021702360319],
 ['GE', 'PHM', 0.8886150071249187],
 ['GEHC', 'WAT', 0.577228708414822],
 ['GEN', 'ROP', 0.7130298988457612],
 ['GILD', 'AMGN', 0.8537965026253141],
 ['GIS', 'SJM', 0.9199128966545934],
 ['GL', 'HPE', 0.8650207363557691],
 ['GLW', 'PARA', 0.8266652603229745],
 ['GM', 'APTV', 0.9423021336580382],
 ['GNRC', 'CBRE', 0.85303759328068],
 ['GOOG', 'GOOGL', 0.9989807961608663],
 ['GOOGL', 'GOOG', 0.9989807961608663],
 ['GPC', 'FDS', 0.7319737819409166],
 ['GPN', 'FISV', 0.8171210293982749],
 ['GRMN', 'TEL', 0.8507789851083422],
 ['GS', 'TROW', 0.8791000323499732],
 ['GWW', 'PPG', 0.8295416719058458],
 ['HAL', 'DVN', 0.9081728606624547],
 ['HAS', 'CMCSA', 0.8292988311501749],
 ['HBAN', 'RF', 0.8554931192878175],
 ['HCA', 'CB', 0.7920816186824557],
 ['HD', 'FDS', 0.8140517729729664],
 ['HES', 'OXY', 0.8023233348070437],
 ['HIG', 'GL', 0.8225487380778769],
 ['HII', 'ABC', 0.8180488961485453],
 ['HLT', 'MAR', 0.8528335783385046],
 ['HOLX', 'MKC', 0.7522653051245212],
 ['HON', 'CTAS', 0.8389182992541069],
 ['HPE', 'GL', 0.8650207363557691],
 ['HPQ', 'AWK', 0.909773800127259],
 ['HRL', 'SJM', 0.8647245316033217],
 ['HSIC', 'AMP', 0.7407870162866915],
 ['HST', 'CBRE', 0.8710130363901404],
 ['HSY', 'SJM', 0.7152535686183401],
 ['HUM', 'UNH', 0.821853031102132],
 ['HWM', 'MS', 0.9170287433103551],
 ['IBM', 'ORCL', 0.8823155417301385],
 ['ICE', 'MCO', 0.87065140505738],
 ['IDXX', 'CE', 0.8605272454687383],
 ['IEX', 'AME', 0.8791014530595687],
 ['IFF', 'TPR', 0.8993223506156733],
 ['ILMN', 'BIO', 0.6937759587827056],
 ['INCY', 'CAG', 0.7294819072265863],
 ['INTC', 'MU', 0.8789798276433004],
 ['INTU', 'ANSS', 0.8708190935544802],
 ['INVH', 'NDAQ', 0.8197151588238248],
 ['IP', 'UAL', 0.9074774743867404],
 ['IPG', 'NVR', 0.8453117694044263],
 ['IQV', 'DHR', 0.753322631823479],
 ['IR', 'HWM', 0.8750723795264866],
 ['IRM', 'WELL', 0.8391262149535936],
 ['ISRG', 'ABT', 0.793499130257803],
 ['IT', 'CBOE', 0.7861542760377634],
 ['ITW', 'ETN', 0.7933240888039057],
 ['IVZ', 'BEN', 0.9353672926688444],
 ['J', 'NVR', 0.8836283635558614],
 ['JBHT', 'UPS', 0.7926666449144966],
 ['JCI', 'AME', 0.866512005105381],
 ['JKHY', 'BR', 0.896747399822957],
 ['JNJ', 'CL', 0.8658505849220949],
 ['JNPR', 'ADSK', 0.7312346279610973],
 ['JPM', 'TXT', 0.7821037402160571],
 ['K', 'KO', 0.9006808595092233],
 ['KDP', 'PEP', 0.9289559398682083],
 ['KEY', 'HBAN', 0.8435972966135175],
 ['KEYS', 'LRCX', 0.8709045913983412],
 ['KHC', 'SJM', 0.8030852069218231],
 ['KIM', 'SPG', 0.7970167778638612],
 ['KLAC', 'AMAT', 0.9125578417479603],
 ['KMB', 'KDP', 0.9103755306604225],
 ['KMI', 'HAL', 0.8103551500030962],
 ['KMX', 'SIVB', 0.8492990733173055],
 ['KO', 'MNST', 0.9433497368440827],
 ['KR', 'EXPD', 0.5845327439309044],
 ['L', 'CB', 0.8746902233119458],
 ['LDOS', 'SJM', 0.7757734973415961],
 ['LEN', 'PHM', 0.9502251817475665],
 ['LH', 'GLW', 0.777910696010991],
 ['LHX', 'NOC', 0.8168008736072373],
 ['LIN', 'ACN', 0.8257510602887687],
 ['LKQ', 'HPQ', 0.8958456646784952],
 ['LLY', 'TSCO', 0.8606432237659527],
 ['LMT', 'NOC', 0.7851366918374959],
 ['LNC', 'CZR', 0.904460933487107],
 ['LNT', 'AEE', 0.878133986673671],
 ['LOW', 'PLD', 0.8024275773951567],
 ['LRCX', 'AMAT', 0.9331094806094339],
 ['LUMN', 'CDW', 0.8449677332063122],
 ['LUV', 'ALK', 0.8846962039560611],
 ['LVS', 'NCLH', 0.7043178197714601],
 ['LW', 'SJM', 0.8820694740853722],
 ['LYB', 'DD', 0.7747490621423884],
 ['LYV', 'HAL', 0.6926483133234183],
 ['MA', 'V', 0.9034358528452352],
 ['MAA', 'MOH', 0.7533612061701984],
 ['MAR', 'HLT', 0.8528335783385046],
 ['MAS', 'IVZ', 0.9116983003798743],
 ['MCD', 'TJX', 0.7771802441703286],
 ['MCHP', 'TXN', 0.9489370274318875],
 ['MCK', 'CAG', 0.6204105063679639],
 ['MCO', 'QCOM', 0.9069170169454422],
 ['MDLZ', 'KMB', 0.8390933808327916],
 ['MDT', 'BK', 0.705752596418275],
 ['MET', 'AFL', 0.8462149106772916],
 ['META', 'MHK', 0.846396837452111],
 ['MGM', 'WYNN', 0.8671690244369636],
 ['MHK', 'PHM', 0.8980995820531706],
 ['MKC', 'GIS', 0.8853183356360329],
 ['MKTX', 'MCO', 0.7322796199283335],
 ['MLM', 'APH', 0.7862251875217222],
 ['MMC', 'AON', 0.8965119202706551],
 ['MMM', 'DIS', 0.7894130304082151],
 ['MNST', 'KO', 0.9433497368440827],
 ['MO', 'K', 0.8405497182192343],
 ['MOH', 'CNC', 0.8206964512290815],
 ['MOS', 'CF', 0.8403500492473001],
 ['MPC', 'VLO', 0.9333560197326007],
 ['MPWR', 'ADI', 0.8276068683821362],
 ['MRK', 'KHC', 0.766955778155869],
 ['MRNA', 'CMI', 0.796467436002594],
 ['MRO', 'FANG', 0.9216570083005066],
 ['MS', 'C', 0.9415699554468102],
 ['MSCI', 'SPGI', 0.7932300299164669],
 ['MSFT', 'TYL', 0.8563539068305297],
 ['MSI', 'KEYS', 0.7940354830405704],
 ['MTB', 'WFC', 0.6865714806038291],
 ['MTCH', 'ETSY', 0.87203238006636],
 ['MTD', 'A', 0.8443370486662808],
 ['MU', 'INTC', 0.8789798276433004],
 ['NCLH', 'CCL', 0.9309222983240326],
 ['NDAQ', 'ACN', 0.8545355429386536],
 ['NDSN', 'BR', 0.8426741060224596],
 ['NEE', 'PEG', 0.8603814127782556],
 ['NEM', 'T', 0.8710498736033259],
 ['NFLX', 'ALK', 0.8555685707983508],
 ['NI', 'AEE', 0.8576173215509102],
 ['NKE', 'AAPL', 0.8447211008666866],
 ['NOC', 'LHX', 0.8168008736072373],
 ['NOW', 'ANSS', 0.8761933532228416],
 ['NRG', 'DVN', 0.7537117328937339],
 ['NSC', 'UNP', 0.8908182940891116],
 ['NTAP', 'NTRS', 0.8615743440944714],
 ['NTRS', 'URI', 0.894628494789812],
 ['NUE', 'FOX', 0.9249032530143135],
 ['NVDA', 'ECL', 0.7940158300910948],
 ['NVR', 'PHM', 0.8879455838591296],
 ['NWL', 'SWK', 0.889669581523156],
 ['NWS', 'NWSA', 0.9942238155006154],
 ['NWSA', 'NWS', 0.9942238155006154],
 ['NXPI', 'QRVO', 0.8763944364793329],
 ['O', 'PSA', 0.7086373960848045],
 ['ODFL', 'NSC', 0.8879181440843045],
 ['OGN', 'CE', 0.8081073183598938],
 ['OKE', 'TRGP', 0.7960999723842141],
 ['OMC', 'NSC', 0.8304715471358591],
 ['ON', 'CDW', 0.8536587303725747],
 ['ORCL', 'IBM', 0.8823155417301385],
 ['ORLY', 'KMB', 0.8160244873676804],
 ['OTIS', 'MAS', 0.8626441616637014],
 ['OXY', 'XOM', 0.9178435520957833],
 ['PARA', 'IFF', 0.8728108488636396],
 ['PAYC', 'VICI', 0.8080782045337844],
 ['PAYX', 'ADP', 0.9046827134807677],
 ['PCAR', 'MS', 0.9180303195936624],
 ['PCG', 'TROW', 0.74849239370118],
 ['PEAK', 'CPT', 0.7788182999793142],
 ['PEG', 'XEL', 0.9018193484661355],
 ['PEP', 'KO', 0.9325363516788306],
 ['PFE', 'K', 0.8383895388033653],
 ['PFG', 'AVGO', 0.8373501499193174],
 ['PG', 'KMB', 0.8569096429179889],
 ['PGR', 'HPE', 0.8392432941500775],
 ['PH', 'RE', 0.8564590393561947],
 ['PHM', 'DHI', 0.9568063376707742],
 ['PKG', 'WRK', 0.9024333043205398],
 ['PKI', 'ADBE', 0.7610655358968325],
 ['PLD', 'AMT', 0.8632484030985241],
 ['PM', 'KDP', 0.7220951534837533],
 ['PNC', 'FITB', 0.822230976942964],
 ['PNR', 'IFF', 0.8918680570576789],
 ['PNW', 'ES', 0.8033235284359569],
 ['POOL', 'MCHP', 0.9169323124173685],
 ['PPG', 'TROW', 0.8978666611212305],
 ['PPL', 'SBAC', 0.7995255029733558],
 ['PRU', 'MS', 0.901295254755474],
 ['PSA', 'EXR', 0.8322111913859616],
 ['PSX', 'MPC', 0.8392116506878586],
 ['PTC', 'CDW', 0.8974559163253258],
 ['PWR', 'EPAM', 0.7224877470894006],
 ['PXD', 'HAL', 0.8272466605350395],
 ['PYPL', 'NWL', 0.7808407420914232],
 ['QCOM', 'MCHP', 0.9414802430487578],
 ['QRVO', 'LRCX', 0.9296603627885485],
 ['RCL', 'CCL', 0.8544126348376178],
 ['RE', 'CTVA', 0.8670539896395105],
 ['REG', 'FRT', 0.9070742633900161],
 ['REGN', 'GILD', 0.8356682600413372],
 ['RF', 'CMA', 0.8563167164401136],
 ['RHI', 'TRMB', 0.7656013247697464],
 ['RJF', 'CTVA', 0.7920384368446173],
 ['RL', 'YUM', 0.6697528513033643],
 ['RMD', 'BIO', 0.7318100569380245],
 ['ROK', 'AME', 0.7767308626829322],
 ['ROL', 'MDLZ', 0.5911519686008513],
 ['ROP', 'GRMN', 0.7537586391185134],
 ['ROST', 'J', 0.7405099322453897],
 ['RSG', 'WM', 0.8711834263153664],
 ['RTX', 'KHC', 0.733025157065604],
 ['SBAC', 'CCI', 0.8289631859712572],
 ['SBNY', 'AXP', 0.780734271666211],
 ['SBUX', 'CB', 0.8935355311396185],
 ['SCHW', 'WAB', 0.6607144656610412],
 ['SEDG', 'FDS', 0.7771975500757089],
 ['SEE', 'EMN', 0.8944338754323394],
 ['SHW', 'TYL', 0.8341181170346798],
 ['SIVB', 'KMX', 0.8492990733173055],
 ['SJM', 'GIS', 0.9199128966545934],
 ['SLB', 'HAL', 0.796120407736966],
 ['SNA', 'CDW', 0.8973037705710919],
 ['SNPS', 'ADP', 0.8212368966277569],
 ['SO', 'FE', 0.7662693247998216],
 ['SPG', 'KIM', 0.7970167778638612],
 ['SPGI', 'SYK', 0.834366463480623],
 ['SRE', 'WEC', 0.8888843172819771],
 ['STE', 'IDXX', 0.7931224789141887],
 ['STLD', 'NUE', 0.8654865443423945],
 ['STT', 'WRK', 0.8989701809181545],
 ['STX', 'AAPL', 0.8060535373417418],
 ['STZ', 'ADBE', 0.6689198137267739],
 ['SWK', 'IVZ', 0.9007690138756838],
 ['SWKS', 'AMAT', 0.9326462565373193],
 ['SYF', 'BXP', 0.806209862297475],
 ['SYK', 'SPGI', 0.834366463480623],
 ['SYY', 'LUV', 0.7945688495831136],
 ['T', 'NEM', 0.8710498736033259],
 ['TAP', 'GRMN', 0.7980782985969532],
 ['TDG', 'WAB', 0.8235350742458756],
 ['TDY', 'APH', 0.8188946185061287],
 ['TECH', 'DHR', 0.7315386043039963],
 ['TEL', 'BEN', 0.9075625276162788],
 ['TER', 'AMAT', 0.9105141930008291],
 ['TFC', 'URI', 0.87439007176484],
 ['TFX', 'MAS', 0.8071640813579632],
 ['TGT', 'WMT', 0.7912194958939726],
 ['TJX', 'MCD', 0.7771802441703286],
 ['TMO', 'DHR', 0.7790244201005445],
 ['TMUS', 'VRTX', 0.7987511736109414],
 ['TPR', 'IFF', 0.8993223506156733],
 ['TRGP', 'OKE', 0.7960999723842141],
 ['TRMB', 'AKAM', 0.8047905973964533],
 ['TROW', 'CBRE', 0.9081728783960721],
 ['TRV', 'CB', 0.8749492338984974],
 ['TSCO', 'DPZ', 0.868967926535502],
 ['TSLA', 'ANSS', 0.7857859743510024],
 ['TSN', 'GIS', 0.7572385064863942],
 ['TT', 'ITW', 0.7318235053954971],
 ['TTWO', 'PNR', 0.5922272619300616],
 ['TXN', 'MCHP', 0.9489370274318875],
 ['TXT', 'AFL', 0.8396580182121196],
 ['TYL', 'ADBE', 0.8778565604474539],
 ['UAL', 'ALK', 0.9342593241165407],
 ['UDR', 'EQR', 0.852753253905926],
 ['UHS', 'HRL', 0.8486577186521336],
 ['ULTA', 'BBWI', 0.7228756475521394],
 ['UNH', 'ELV', 0.8365337447346793],
 ['UNP', 'NSC', 0.8908182940891116],
 ['UPS', 'ACN', 0.8137532794447122],
 ['URI', 'GM', 0.9211093861521341],
 ['USB', 'MAS', 0.8162736094406203],
 ['V', 'MA', 0.9034358528452352],
 ['VFC', 'DIS', 0.8658537200869534],
 ['VICI', 'PPG', 0.8453386571341979],
 ['VLO', 'MPC', 0.9333560197326007],
 ['VMC', 'ADP', 0.8695283207769555],
 ['VNO', 'EQT', 0.04411250750085562],
 ['VRSK', 'MCO', 0.8998593429436709],
 ['VRSN', 'ROP', 0.649065262352618],
 ['VRTX', 'AMGN', 0.8220112249974182],
 ['VTR', 'WELL', 0.7537388645268309],
 ['VTRS', 'KDP', 0.8523361038097256],
 ['VZ', 'WHR', 0.8606166521346409],
 ['WAB', 'TDG', 0.8235350742458756],
 ['WAT', 'MTD', 0.7986662834504493],
 ['WBA', 'LLY', 0.8394660419218942],
 ['WBD', 'PARA', 0.8267205452110488],
 ['WDC', 'NWL', 0.8850593063874418],
 ['WEC', 'AEE', 0.9183938183231947],
 ['WELL', 'IRM', 0.8391262149535936],
 ['WFC', 'BAC', 0.7996354858428614],
 ['WHR', 'GM', 0.929619172541282],
 ['WM', 'ADP', 0.877894612320683],
 ['WMB', 'KIM', 0.729542356997824],
 ['WMT', 'TGT', 0.7912194958939726],
 ['WRB', 'L', 0.8480475685286071],
 ['WRK', 'PKG', 0.9024333043205398],
 ['WST', 'DHR', 0.7238131702344682],
 ['WTW', 'UNP', 0.7640527178436538],
 ['WY', 'WM', 0.8135201166108789],
 ['WYNN', 'MGM', 0.8671690244369636],
 ['XEL', 'PEG', 0.9018193484661355],
 ['XOM', 'CVX', 0.9357101725871453],
 ['XRAY', 'URI', 0.8799694435185056],
 ['XYL', 'IEX', 0.8343073113589761],
 ['YUM', 'PEP', 0.8594110770532185],
 ['ZBH', 'MOH', 0.6143602876140398],
 ['ZBRA', 'DIS', 0.8971482986478767],
 ['ZION', 'HIG', 0.7908590089418222],
 ['ZTS', 'MTD', 0.8227819201068004]]    
returnlog=[]

dataset=CointegrationA.datasetprovider(stock1="ZION",stock2="HIG",week="52w",period="30m",backtrack=7)

everything=CointegrationA.cointegrationCacl("ZION","HIG",dataset[1],dataset[0],0.0001,-3.5,30)
    
alllogs=pd.DataFrame(everything[1])
alllogs=alllogs.transpose()
alllogs["t_stats"]=everything[2]
x=0


if __name__== '__main__':
    from concurrent.futures import ProcessPoolExecutor
    with ProcessPoolExecutor() as executor:
        results = [executor.submit(CointegrationA.cointegrationCacl, j[0], j[1], dataset[1], dataset[0], 0.0001, -3.5, 30) for j in stocklist]

        for j, future in zip(stocklist, results):
            try:
                x += 1
                print("iteration"+str(x)+"with"+j[0]+"and"+j[1])
                alllogs.to_csv("fulllogs(30-7,-3.5,30).csv")
                print("hi")
                dataset = CointegrationA.datasetprovider(stock1=j[0],stock2=j[1],week="52w",period="30m",backtrack=7)
                everything = future.result()

                logs = pd.DataFrame(everything[1])
                logs = logs.transpose()
                logs.columns = ["positions "+j[0]+"-"+j[1],"returns","net returns"]
                logs["t_stats"] = everything[2]
                returnlog.append([j, everything[0]])
                alllogs = pd.concat([alllogs, logs], axis=1)
                print("hi")

            except:
                pass
        
    loggedreturns=pd.DataFrame(returnlog)
    loggedreturns.to_csv("loggedreturns(30-7,-3.5,30).csv")





